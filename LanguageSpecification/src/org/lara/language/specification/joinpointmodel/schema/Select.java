//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in
// JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.03.12 at 05:44:48 PM GMT
//

package org.lara.language.specification.joinpointmodel.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for Select complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Select">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="class" use="required" type="{http://www.w3.org/2001/XMLSchema}IDREF" />
 *       &lt;attribute name="alias" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="tooltip" type="{http://www.w3.org/2001/XMLSchema}string" />

 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Select")
public class Select {

    @XmlAttribute(name = "class", required = true)
    @XmlIDREF
    @XmlSchemaType(name = "IDREF")
    protected JoinPointType clazz;
    @XmlAttribute
    protected String alias;
    @XmlAttribute
    protected String tooltip;

    /**
     * Gets the value of the clazz property.
     * 
     * @return possible object is {@link Object }
     * 
     */
    public JoinPointType getClazz() {
        return clazz;
    }

    /**
     * Sets the value of the clazz property.
     * 
     * @param value
     *            allowed object is {@link Object }
     * 
     */
    public void setClazz(JoinPointType value) {
        clazz = value;
    }

    /**
     * Gets the value of the alias property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getAlias() {
        return alias;
    }

    /**
     * Sets the value of the alias property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setAlias(String value) {
        alias = value;
    }

    /**
     * @return the toolTip
     */
    public String getTooltip() {
        return tooltip;
    }

    /**
     * @param toolTip
     *            the toolTip to set
     */
    public void setTooltip(String tooltip) {
        this.tooltip = tooltip;
    }

    @Override
    public String toString() {
        String value = getAlias();
        String clazz2 = getClazz().getClazz();
        if (!getAlias().equals(clazz2)) {
            value += "(" + clazz2 + ")";
        }
        return value;
    }
}
