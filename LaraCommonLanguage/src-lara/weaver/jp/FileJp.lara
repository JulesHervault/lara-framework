import weaver.jp.JoinPoint;

/**
 * 
 *
 * @class
 */
function FileJp(astNode) {
    // Parent constructor
    JoinPoint.call(this,astNode);
    
}
// Inheritance
FileJp.prototype = Object.create(JoinPoint.prototype);
FileJp.prototype.constructor = FileJp;

FileJp.prototype.instanceOf = function(joinPointType) {
	if(joinPointType === this.joinPointType) {
		return true;
	}
	
	return (new JoinPoint(this.astNode)).instanceOf(joinPointType);
}

_lara_dummy_ = Object.defineProperty(FileJp.prototype, 'joinPointType', {
	configurable: true,
	get: function () { return 'file'; }
});

_lara_dummy_ = Object.defineProperty(FileJp.prototype, 'name', {
	configurable: true,
	get: function () { throw this.constructor.name + '.name not implemented'; }
});

_lara_dummy_ = Object.defineProperty(FileJp.prototype, 'id', {
	configurable: true,
	get: function () { throw this.constructor.name + '.id not implemented'; }
});

