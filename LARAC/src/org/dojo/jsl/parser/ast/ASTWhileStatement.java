/* Generated By:JJTree: Do not edit this line. ASTWhileStatement.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import larac.objects.Enums;

public class ASTWhileStatement extends SimpleNode {
	public ASTWhileStatement(int id) {
		super(id);
	}

	public ASTWhileStatement(LARAEcmaScript p, int id) {
		super(p, id);
	}

	@Override
	public Object organize(Object obj) {
		for (int i = 0; i < children.length; i++) {
			((SimpleNode) children[i]).organize(obj);
		}
		return null;
	}

	@Override
	public void toXML(Document doc, Element parent) {
		final Element stmtEl = doc.createElement("statement");
		stmtEl.setAttribute("name", "loop");
		stmtEl.setAttribute("desc", Enums.LoopTypes.WHILE.toString());
		stmtEl.setAttribute("coord", getCoords());
		if (!label.isEmpty()) {
			stmtEl.setAttribute("label", label);
		}
		parent.appendChild(stmtEl);

		final Element conditionEl = doc.createElement("expression");
		conditionEl.setAttribute("desc", "condition");
		stmtEl.appendChild(conditionEl);
		((SimpleNode) children[0]).toXML(doc, conditionEl);

		final Element codeEl = doc.createElement("code");
		codeEl.setAttribute("desc", "body");
		stmtEl.appendChild(codeEl);
		((SimpleNode) children[1]).toXML(doc, codeEl);
	}

}
/*
 * JavaCC - OriginalChecksum=0d01611f7eb519190d61f4c36d5dc3da (do not edit this
 * line)
 */
