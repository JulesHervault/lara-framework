/* Generated By:JJTree: Do not edit this line. ASTFunctionCallParameters.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class ASTFunctionCallParameters extends SimpleNode {
	protected boolean areNamed = false;

	public ASTFunctionCallParameters(int id) {
		super(id);
	}

	public ASTFunctionCallParameters(LARAEcmaScript p, int id) {
		super(p, id);
	}

	@Override
	public String toString() {
		return LARAEcmaScriptTreeConstants.jjtNodeName[id] + " [named=" + areNamed + "]";
	}

	@Override
	public Object organize(Object obj) {

		if (children != null) {
			for (int i = 0; i < children.length; i++) {
				((SimpleNode) children[i]).organize(obj);
			}
		}

		return null;
	}

	@Override
	public void toXML(Document doc, Element parent) {
		if (children != null) {
			for (int j = 0; j < children.length; j++) {
				final Element argEl = doc.createElement("argument");
				final SimpleNode child = ((SimpleNode) children[j]);
				if (child.isTemplate) {
					child.toXMLTemplate(doc, argEl);
				} else {
					child.toXML(doc, argEl);
				}
				parent.appendChild(argEl);
			}
		}
	}

}
/*
 * JavaCC - OriginalChecksum=0235fb7373907dbeba1c6755ad622a23 (do not edit this
 * line)
 */
