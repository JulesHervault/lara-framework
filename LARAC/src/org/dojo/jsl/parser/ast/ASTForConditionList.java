/* Generated By:JJTree: Do not edit this line. ASTForConditionList.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

public class ASTForConditionList extends SimpleNode {
	public ASTForConditionList(int id) {
		super(id);
	}

	public ASTForConditionList(LARAEcmaScript p, int id) {
		super(p, id);
	}

	@Override
	public Object organize(Object obj) {
		for (int i = 0; i < children.length; i++) {
			((SimpleNode) children[i]).organize(obj);
		}
		return null;
	}

	@Override
	public void toXML(Document doc, Element parent) {
		if (((SimpleNode) children[0]).children.length == 1) {
			((SimpleNode) children[0]).toXML(doc, parent);
			return;
		}
		final Element exprListEl = doc.createElement("temp"); // think about
																// using
																// doc.removeChild(Node);
		((SimpleNode) children[0]).toXML(doc, exprListEl);
		final NodeList els = exprListEl.getChildNodes();
		Element lastEl = (Element) els.item(0);
		for (int i = 1; i < els.getLength(); i++) {
			final Element OREl = doc.createElement("op");
			OREl.setAttribute("name", "AND");
			OREl.appendChild(lastEl);
			lastEl = OREl;
			lastEl.appendChild(els.item(0)); // zero because when appending to
												// another father, it is removed
			// from that list
		}
		parent.appendChild(lastEl);
	}
}
/*
 * JavaCC - OriginalChecksum=f32c23c785caa9bc827e13c43a6901a8 (do not edit this
 * line)
 */
