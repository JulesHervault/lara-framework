/* Generated By:JJTree: Do not edit this line. ASTYieldStatement.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class ASTYieldStatement extends SimpleNode {

    private boolean hasStar = false;

    public ASTYieldStatement(int id) {
        super(id);
    }

    public ASTYieldStatement(LARAEcmaScript p, int id) {
        super(p, id);
    }

    @Override
    public Object organize(Object obj) {
        var expression = ((SimpleNode) children[0]);
        if (expression instanceof ASTYieldStar) {
            this.hasStar = true;
            expression = ((SimpleNode) children[1]);
        }

        // ((SimpleNode) children[0]).organize(obj);
        expression.organize(obj);
        return obj;
    }

    @Override
    public void toXML(Document doc, Element parent) {
        // Element returnEl = doc.createElement("return");
        // final SimpleNode funDecl = getParentById(LARAEcmaScriptTreeConstants.JJTFUNCTIONDECLARATION);
        // final SimpleNode funExpr = getParentById(LARAEcmaScriptTreeConstants.JJTFUNCTIONEXPRESSION);
        final Element returnEl = doc.createElement("statement");
        var name = hasStar ? "yield_star" : "yield";
        returnEl.setAttribute("name", name);
        /*
        if (funDecl == null && funExpr == null) { // IF both are null, mean that
                                                  // the yield is somewhere
                                                  // inside the
            // aspect
            returnEl.setAttribute("name", "exit");
        } else {
            returnEl.setAttribute("name", "yield");
        }
        */
        returnEl.setAttribute("coord", getCoords());
        parent.appendChild(returnEl);
        final Element exprEl = doc.createElement("expression");
        returnEl.appendChild(exprEl);

        int childIndex = ((SimpleNode) children[0]) instanceof ASTYieldStar ? 1 : 0;

        ((SimpleNode) children[childIndex]).toXML(doc, exprEl);
        // ((SimpleNode) children[0]).toXML(doc, exprEl);
    }
}
/* JavaCC - OriginalChecksum=b744cd05342470d303d814d1b3486714 (do not edit this line) */
