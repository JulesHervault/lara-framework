/* Generated By:JJTree: Do not edit this line. ASTReturnStatement.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class ASTReturnStatement extends SimpleNode {
	public ASTReturnStatement(int id) {
		super(id);
	}

	public ASTReturnStatement(LARAEcmaScript p, int id) {
		super(p, id);
	}

	@Override
	public Object organize(Object obj) {
		((SimpleNode) children[0]).organize(obj);
		return obj;
	}

	@Override
	public void toXML(Document doc, Element parent) {
		// Element returnEl = doc.createElement("return");
		final SimpleNode funDecl = getParentById(LARAEcmaScriptTreeConstants.JJTFUNCTIONDECLARATION);
		final SimpleNode funExpr = getParentById(LARAEcmaScriptTreeConstants.JJTFUNCTIONEXPRESSION);
		final Element returnEl = doc.createElement("statement");
		if (funDecl == null && funExpr == null) { // IF both are null, mean that
													// the return is somewhere
													// inside the
			// aspect
			returnEl.setAttribute("name", "exit");
		} else {
			returnEl.setAttribute("name", "return");
		}
		returnEl.setAttribute("coord", getCoords());
		parent.appendChild(returnEl);
		final Element exprEl = doc.createElement("expression");
		returnEl.appendChild(exprEl);
		((SimpleNode) children[0]).toXML(doc, exprEl);
	}

}
/*
 * JavaCC - OriginalChecksum=1bec65412e57773f32b5cb7e65646749 (do not edit this
 * line)
 */
