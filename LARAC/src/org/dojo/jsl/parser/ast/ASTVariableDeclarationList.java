/* Generated By:JJTree: Do not edit this line. ASTVariableDeclarationList.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import java.util.ArrayList;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import larac.LaraC;

public class ASTVariableDeclarationList extends SimpleNode {
    public ASTVariableDeclarationList(int id) {
        super(id);
    }

    public ASTVariableDeclarationList(LARAEcmaScript p, int id) {
        super(p, id);
    }

    @Override
    public void declareGlobal(LaraC lara) {
        getSimpleNodeChildren().forEach(n -> n.declareGlobal(lara));
    }

    @Override
    public Object organize(Object obj) {

        final ArrayList<ASTVariableDeclaration> variablesDeclaration = new ArrayList<>();
        if (getChildren() != null) {
            for (final Node n : getChildren()) {
                variablesDeclaration.add((ASTVariableDeclaration) n);
                ((SimpleNode) n).organize(obj);
            }
        }
        return variablesDeclaration;
    }

    @Override
    public Object organize(Object obj, Object obj2) {
        if (getChildren() == null) {
            return null;
        }

        final ArrayList<ASTVariableDeclaration> variablesDeclaration = new ArrayList<>();
        for (final Node n : getChildren()) {
            variablesDeclaration.add((ASTVariableDeclaration) n);
            ((SimpleNode) n).organize(obj, obj2);
        }
        return variablesDeclaration;
    }

    @Override
    public void toXML(Document doc, Element parent) {

        for (final Node n : getChildren()) {
            ((SimpleNode) n).toXML(doc, parent);
        }

    }
}
/*
 * JavaCC - OriginalChecksum=6a776e0bca1e74c8919a4767da17888c (do not edit this
 * line)
 */
