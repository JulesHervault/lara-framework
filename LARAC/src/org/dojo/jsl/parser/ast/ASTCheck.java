/* Generated By:JJTree: Do not edit this line. ASTCheck.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class ASTCheck extends SimpleNode {
    public ASTCheck(int id) {
	super(id);
    }

    public ASTCheck(LARAEcmaScript p, int id) {
	super(p, id);
    }

    @Override
    public Object organize(Object obj) {
	if (children == null) {
	    return null;
	}
	((ASTAspectDef) parent).setCheck(this);
	for (final Node child : getChildren()) {
	    ((SimpleNode) child).organize(obj);
	}
	return null;
    }

    @Override
    public void toXML(Document doc, Element parent) {
	final Element checkEl = doc.createElement("check");
	parent.appendChild(checkEl);

	if (jjtGetNumChildren() == 1) {
	    ((SimpleNode) children[0]).toXML(doc, checkEl);
	    return;
	}

	Element andEl = doc.createElement("op");
	andEl.setAttribute("name", "AND");
	SimpleNode left = getChild(0);
	SimpleNode right = getChild(1);
	left.toXML(doc, andEl);
	right.toXML(doc, andEl);
	for (int i = 2; i < jjtGetNumChildren(); i++) {
	    Element newAndEl = doc.createElement("op");
	    newAndEl.setAttribute("name", "AND");
	    newAndEl.appendChild(andEl);
	    andEl = newAndEl;
	    SimpleNode child = getChild(i);
	    child.toXML(doc, andEl);
	}

	checkEl.appendChild(andEl);
    }
}
/*
 * JavaCC - OriginalChecksum=c72555870faf84ea1630fc8784600d0c (do not edit this
 * line)
 */
