/* Generated By:JJTree: Do not edit this line. ASTExpressionList.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,
 * NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */
package org.dojo.jsl.parser.ast;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class ASTExpressionList extends SimpleNode {
	public ASTExpressionList(int id) {
		super(id);
	}

	public ASTExpressionList(LARAEcmaScript p, int id) {
		super(p, id);
	}

	@Override
	public Object organize(Object obj) {
		for (final Node child : getChildren()) {
			((SimpleNode) child).organize(obj);
		}
		return null;
	}

	@Override
	public void toXML(Document doc, Element parent) {
		final SimpleNode left = (SimpleNode) getChildren()[0];
		SimpleNode right = (SimpleNode) getChildren()[1];
		Element opEl = doc.createElement("op");
		opEl.setAttribute("name", "COMMA");
		left.toXML(doc, opEl);
		right.toXML(doc, opEl);
		int i = 2;
		while (i < getChildren().length) {
			final Element newOpEl = doc.createElement("op");
			newOpEl.setAttribute("name", "COMMA");
			newOpEl.appendChild(opEl);
			opEl = newOpEl;
			right = (SimpleNode) getChildren()[i++];
			right.toXML(doc, opEl);
		}
		parent.appendChild(opEl);
	}
}
/*
 * JavaCC - OriginalChecksum=b0c2c08a1c8fb2da59ad8e381622575c (do not edit this
 * line)
 */
